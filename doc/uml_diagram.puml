@startuml

skinparam linetype ortho

package "View" {

    package "Activities" <<Rectangle>> {

        class AuthenticationActivity

        class SignInActivity

        class HomeActivity

        class ProfileActivity {
            profile : Profile
        }

        AuthenticationActivity -- HomeActivity
        AuthenticationActivity -- SignInActivity
        SignInActivity -- HomeActivity
        HomeActivity -- ProfileActivity
    }

    package "Fragments" <<Rectangle>> {

        class MoodListFragment {
            dataList : List<MoodEvent> 
            dataAdapter : ArrayAdapter<MoodEvent> 
            listView : ListView

            applyFilter(filter : String)
        }

        class SearchFragment {
            profileList : ProfileListFragment
            currentSearch : String
        }

        class AddFragment {
        }

        class FollowingFragment {
            profileList : ProfileListFragment
        }

        class DetailsFragment {
            mood : MoodEvent
            editingEnabled : boolean
        }

        class ProfileListFragment {
            listView : ListView
            dataList : List<Profile>

            applyFilter(filter : String)
        }

        HomeActivity "1" *-- "1" MapFragment
        HomeActivity "1" o-- "1" MoodListFragment
        HomeActivity "1" *-- "1" SearchFragment
        HomeActivity "1" *-- "1" AddFragment
        HomeActivity "1" *-- "1" FollowingFragment
        HomeActivity "1" o-- "1" FilterFragment
        HomeActivity "1" o-- "1" DetailsFragment
        ProfileActivity "1" o-- "1" MoodListFragment
        ProfileActivity "1" o-- "1" FilterFragment

        SearchFragment "1" o-- "2" ProfileListFragment
        FollowingFragment "1" o-- "1" ProfileListFragment

    }

}

package "Android API" <<Rectangle>> {

    interface Filterable
    interface Filter
    abstract class ArrayAdapter
}

package "Control" <<Rectangle>> {

    class MoodAdapter {
        dataList : List<MoodEvent>
        getFilter() : MoodFilter
    }

    class ProfileAdapter {
        dataList : List<MoodEvent>
        getFilter() : ProfileFilter
    }

    class MoodFilter {
        filter(constraint : CharSequence) <<override>>
    }

    class ProfileFilter {
        filter(constraint : CharSequence) <<override>>
    }
    
    Filterable <|-- MoodAdapter
    ArrayAdapter <|-- MoodAdapter : MoodEvent

    Filterable <|-- ProfileAdapter
    ArrayAdapter <|-- ProfileAdapter : Profile
    
    Filter <|-- MoodFilter
    Filter <|-- ProfileFilter

    ProfileAdapter -- ProfileFilter
    MoodAdapter -- MoodFilter 

}

MapFragment -- MoodAdapter
MapFragment -- MoodFilter
MoodListFragment -- MoodAdapter
MoodListFragment -- MoodFilter

ProfileListFragment o-- ProfileAdapter
ProfileListFragment -- ProfileFilter

MapFragment -- MoodFilter

package "Model" <<Rectangle>> {

    class UserProfile {
        UserProfile(username : String)
        UserProfile(username : String, firstName : String, lastName : String)
    }

    class MoodEvent {
        location : Location 
        dateTime : DateTime 
        remark : String 
        image : Image 
        situation : SocialSituation 
        emotion : Emotion
        MoodEvent(dateTime:DateTime,emotion:Emotion)
    }

    class Emotion {
        -emotions : static Map<String, Emotion>
        +get(name : String) : static Emotion

        -imageResource : String 
        -name : String 
    }

    class SocialSituation {
        -situations : static Map<String, SocialSituation>
        +get(key : String) : static SocialSituation

        -name : String
        -SocialSituation(name : String)
    }

    class Location {
        -latitude : double
        -longitude : double

        +Location(latitude:double,longitude:double)

        +getLatitude() : double
        +getLongitude() : double
    }

    class Profile {
        -username : final String
        -firstName : String
        -lastName : String

        +Profile(username : String)
        +Profile(username : String, firstName : String, lastName : String)
    }

    class PublicProfile {
        -following : boolean

        +PublicProfile(username : String)
        +PublicProfile(username : String, firstName : String, lastName : String)
    }

    package "Java API" <<Rectangle>> {
    class DateTime
    }   

    MoodEvent o-- Emotion
    MoodEvent *-- Location
    MoodEvent o-- SocialSituation
    MoodEvent *-- DateTime

    Profile <|-- UserProfile
    Profile <|-- PublicProfile

}

MoodAdapter -- MoodEvent
ProfileAdapter -- Profile

MoodFilter -- MoodEvent
ProfileFilter -- Profile

DetailsFragment -- MoodEvent

@enduml
