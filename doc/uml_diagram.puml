@startuml

AuthenticationActivity -- SignInActivity
AuthenticationActivity -- HomeActivity
class AuthenticationActivity

HomeActivity *-- MapFragment
HomeActivity o-- MoodListFragment
HomeActivity o-- MoodAdapter
HomeActivity *-- SearchFragment
HomeActivity *-- AddFragment
HomeActivity *-- FollowingFragment
HomeActivity o-- FilterFragment
HomeActivity o-- DetailsFragment
class HomeActivity

ProfileActivity -- UserProfile
ProfileActivity -- MoodListFragment
ProfileActivity -- FilterFragment
class ProfileActivity

SignInActivity -- HomeActivity
class SignInActivity {
    
}

UserProfile -- MoodAdapter
class UserProfile {
    username : String
    firstName : String
    lastName : String
    UserProfile(username:String)
    UserProfile(username:String,firstName:String,lastName:String)
}

MoodEvent -- Coordinate
MoodEvent -- Emotion
MoodEvent -- SocialSituation
class MoodEvent {
    location : Coordinate 
    dateTime : DateTime 
    remark : String 
    image : Image 
    situation : SocialSituation 
    emotion : Emotion
    MoodEvent(dateTime:DateTime,emotion:Emotion)
}

class Emotion {
    imageResourceName : String 
    emotionName : String 
    Emotion(imageResourceName:String,emotionName:String)
}

class SocialSituation {
    socialSituation String
}

class Coordinate {
    latitude : double
    longitude : double
    Coordinate(latitude:double,longitude:double)
}

MoodListFragment -- MoodAdapter
class MoodListFragment {
}

MoodAdapter -- MoodFilter
MoodAdapter -- MoodEvent
class MoodAdapter {
    getFilter : MoodFilter
}

class MoodFilter {
    filter(filterSequence : String}
}

SearchFragment -- UserProfile
class SearchFragment {
    searchEntry : EditText 
    submitButton : Button 
    results : LinearLayout 
}

class AddFragment {
    mood : EditText
    photoButton : Button 
    reason : EditText 
    dateButton : Button 
    timeButton : Button 
    socialSituation : EditText 
    location : EditText 
    submitButton : Button 
}

DetailsFragment -- MoodEvent
class DetailsFragment {
    moodImage : Image 
    photo : Image 
    name : TextView 
    reason : TextView 
    time : TextView 
    date : TextView 
    socialSituation : TextView 
    location : TextView 
    editButton : Button 
    deleteButton : Button 
}

FollowingFragment -- UserProfile
class FollowingFragment {
    dataList : ArrayList<MoodEvent> 
    dataAdapter : ArrayAdapter<MoodEvent> 
    listView : ListView 
    
}

MapFragment -- MoodAdapter
class MapFragment {
}

abstract class Filter <<android>>

class FilterFragment

Filter <|-- MoodFilter
abstract class Filter <<android>> 

ArrayAdapter <|-- MoodAdapter
class ArrayAdapter <<android>>

Filterable <|-- MoodAdapter
interface Filterable <<android>>

EmotionType -- Emotion
enum EmotionType


@enduml
